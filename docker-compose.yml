version: '2.1'

networks:
  internal:
  # external:  # Reserved for load balancer / proxy.

services:
  rabbit:
    image: rabbitmq:3.6-management  # Use latest version of 3.6 with management plugin enabled.
    networks:
      internal:
    ports:
      - "5672"
    logging:
      driver: "none"
    healthcheck:
      test: nc -z 5672

  redis:
    image: redis:2.8  # Use latest version of 2.8.
    networks:
      internal:
    ports:
      - "6373:6379"
    logging:
      driver: "none"
    healthcheck:
      test: nc -z 6379

  db:
    image: "hellolily/hellolily-db:latest"
    networks:
      internal:
    ports:
      - "5433:5432"
    logging:
      driver: "none"
    healthcheck:
      test: nc -z 5432

  es:
    image: elasticsearch:1.7-alpine  # Use latest version of 1.7.
    networks:
      internal:
    ports:
      - "9200"
    logging:
      driver: "none"
    healthcheck:
      test: nc -z 9200

  app:
    image: "hellolily/hellolily-app:latest"
    command: "/bin/true"
    networks:
      - internal
    environment:
      - PYTHONUNBUFFERED=true
      - DJANGO_SETTINGS_MODULE=lily.settings.settings
      - DEBUG=1
      - SECRET_KEY=abcdefghijklmnopqrstuvwxyz0123456789abcdefghijklmn
      - DATABASE_URL=postgres://hellolily:@db/hellolily
      - MULTI_TENANT=1
      - TLDEXTRACT_CACHE=./.tld_set
    volumes:
      - .:/home/docker/hellolily
    cap_drop:
      - ALL

  web:
    extends: app
    command: python manage.py runserver 0:8000
    networks:
      - internal
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy
    ports:
      - "8080:8000"
      - "8083:8081"

  flower:
    extends: app
    command: flower --app=lily.celery
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    ports:
      - "5555"

  beat:
    extends: app
    command: celery worker -B --app=lily.celery --loglevel=info -Q celery -n beat.%h -c 1
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy

  worker1:
    extends: app
    command: celery worker --loglevel=info --app=lily.celery -Q email_async_tasks -n worker1.%h -c 12 -P eventlet
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy

  worker2:
    extends: app
    command: celery worker --loglevel=info --app=lily.celery -Q email_scheduled_tasks,email_first_sync,other_tasks -n worker2.%h -c 12 -P eventlet
    depends_on:
      db:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      redis:
        condition: service_healthy
      es:
        condition: service_healthy
